name: Test Docker Stack

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  docker:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      # Overwrite dev.env to use http
      PROXY_DEFAULT_ENTRYPOINTS: web
      PROXY_DEFAULT_SCHEME: http
      # Overwrite Addresses in dev.env
      FRONTEND_ADDRESS: werkstatthub.docker.localhost
      DOCS_ADDRESS: docs.werkstatthub.docker.localhost
      MINIO_ADDRESS: minio.werkstatthub.docker.localhost
      MINIO_API_ADDRESS: minioapi.werkstatthub.docker.localhost
      KEYCLOAK_ADDRESS: keycloak.werkstatthub.docker.localhost
      API_ADDRESS: api.werkstatthub.docker.localhost
      EDC_ADDRESS: edc.werkstatthub.docker.localhost
      COMPOSE_PROFILES: full

    steps:
    # Setup environment
      - name: Checkout
        uses: actions/checkout@v1

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2

    # Tag Containers
      - name: Build and tag containers
        run: docker compose --env-file=dev.env build

    # Start Containers
      - name: Start containers and wait for healthy state
        run: docker compose --env-file=dev.env up -d --wait

    # Test Code Compliance
      - name: Install python dependencies
        run: pip install -r requirements.txt

      - name: Run pytest
        run: pytest ./api

      - name: Run flake8
        run: flake8 ./api

    # Test documentation
      - name: Check if documentation is reachable
        run: |
          curl -fs -o /dev/null -w 'http_code:%{http_code}' \
          $PROXY_DEFAULT_SCHEME://$DOCS_ADDRESS \
          || exit 1

    # Test MongoDB
      - name: Check if MongoDB is reachable
        run: |
          curl -fs -o /dev/null -w 'http_code:%{http_code}' \
          http://localhost:27017 \
          || exit 1

    # Test Keycloak
      - name: Check if Keycloak is healthy
        run: |
          curl -fs \
          $PROXY_DEFAULT_SCHEME://$KEYCLOAK_ADDRESS/health/live \
          || exit 1

    # Test MinIO
      - name: Check if MinIO is healthy
        run: |
          curl -fs \
          $PROXY_DEFAULT_SCHEME://$MINIO_ADDRESS/minio/health/live \
          || exit 1

    # Test EDC
      - name: Check if EDC is healthy
        run: |
            curl -fs \
            $PROXY_DEFAULT_SCHEME://$EDC_ADDRESS/api/health \
            || exit 1

    # Test API
      - name: Check if API is healthy
        run: |
          curl -fs \
          $PROXY_DEFAULT_SCHEME://$API_ADDRESS/v1/health/ping \
          || exit 1

      - name: Check for strict-transport-security header
        run: |
          curl -sIX GET $PROXY_DEFAULT_SCHEME://$API_ADDRESS/v1/health/ping \
            | grep -iq "strict-transport-security" \
            || exit 1

    # Test Frontend
      - name: Check if Frontend is reachable
        run: |
          curl -fs \
          $PROXY_DEFAULT_SCHEME://$FRONTEND_ADDRESS \
          || exit 1

    # Clean up
      - name: Stop containers
        if: always()
        run: docker compose --env-file=dev.env down -v
