version: "3.8"

x-restart-policy: &default_restart_policy
  restart: ${DEFAULT_RESTART_POLICY}

services:
  mongo:
    build: 
      context: ./mongo
    <<: *default_restart_policy
    env_file:
      - mongo/mongo.env
    hostname: "mongo"
    networks:
      - hubintranet
      - hubnet
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - mongo-data:/data/db

  keycloak:
    build:
      context: ./keycloak
      args:
        - KC_VER=20.0
    <<: *default_restart_policy
    command: start-dev
    container_name: keycloak
    depends_on:
      - keycloak-db
    env_file:
      - keycloak/keycloak.env
    hostname: "keycloak"
    networks:
      - keycloaknet
      - hubintranet
      - hubnet
    ports:
      - 8080:8080
      - 8443:8443
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 2s
      timeout: 2s
      retries: 15

  keycloak-config:
      image: docker
      command: sh -c "docker exec keycloak sh /opt/keycloak-config.sh"
      depends_on:
        keycloak:
          condition: service_healthy
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"

  keycloak-db:
    image: postgres:15-alpine
    <<: *default_restart_policy
    container_name: keycloak-db
    env_file:
      - postgres/postgres.env
    hostname: "keycloak-db"
    networks:
      - keycloaknet
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    build:
      context: ./minio
    <<: *default_restart_policy
    command: server /data --console-address ":9090"
    depends_on:
      keycloak-config:
        condition: service_completed_successfully
    env_file:
      - minio/minio.env
    hostname: "minio"
    networks:
      - hubintranet
      - hubnet
    ports:
      - 9000:9000
      - 9090:9090
    volumes:
      - minio-data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000" ]
      interval: 2s
      timeout: 2s
      retries: 15

  minio-config:
      image: minio/mc
      depends_on:
        minio:
          condition: service_started
      entrypoint: ["sh","-c","chmod +x /minio-config.sh && ./minio-config.sh"]
      environment:
        - HOST_IP_ADDRESS=${HOST_IP_ADDRESS}
        - S3_ROOT_USER=${S3_ROOT_USER}
        - S3_ROOT_PASSWORD=${S3_ROOT_PASSWORD}
      volumes:
        - ./minio/minio-config.sh:/minio-config.sh

  edc:
      build: 
        context: ./edc
        args:
          - GIT_URL=https://github.com/eclipse-edc/Connector.git
          - TAG=v0.0.1-milestone-9
      <<: *default_restart_policy
      env_file:
        - edc/edc.env
      hostname: "edc"
      networks:
        - hubnet
      ports:
        - 8181:8181
        - 8182:8182
        - 8282:8282
      volumes:
        - ./edc/config.properties:/config.properties:ro
      
  api:
    build:
      context: ./api
    <<: *default_restart_policy
    # DEVELOPMENT: run with reload and mount api package code
    command: uvicorn --host 0.0.0.0 --reload api.main:app
    depends_on:
      - mongo
    env_file:
      - api/api.env
    hostname: "api"
    networks:
      - hubintranet
      - hubnet
    ports:
      - 8000:8000
    volumes:
      - ./api/api/:/home/api/api/

networks:
  hubnet:
  hubintranet:
    internal: true
  keycloaknet:
    internal: true

volumes:
  mongo-data:
  postgres-data:
  minio-data:
